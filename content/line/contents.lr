title: Line Charts
---
body:
<section>
    <div class="row">
        <div class="col-12">
            <div class="row">
              <ul class="list-group col-1">
                <li class="list-group-item list-header">Mixins</li>
                <li class="list-group-item"><a href="http://dc-js.github.io/dc.js/docs/html/BaseMixin.html">BaseMixin</a></li>
                <li class="list-group-item"><a href="http://dc-js.github.io/dc.js/docs/html/MarginMixin.html">MarginMixin</a></li>
                <li class="list-group-item"><a href="http://dc-js.github.io/dc.js/docs/html/ColorMixin.html">ColorMixin</a></li>
                <li class="list-group-item"><a href="http://dc-js.github.io/dc.js/docs/html/CoordinateGridMixin.html">CoordinateGridMixin</a></li>
                <li class="list-group-item"><a href="http://dc-js.github.io/dc.js/docs/html/StackMixin.html">StackMixin</a></li>
              </ul>
              <ul class="list-group col-1">
                <li class="list-group-item list-header">Methods</li>
                <li class="list-group-item"><strong>curve</strong></li>
                <li class="list-group-item"><strong>dashStyle</strong></li>
                <li class="list-group-item"><strong>defined</strong></li>
                <li class="list-group-item"><strong>dotRadius</strong></li>
                <li class="list-group-item"><strong>interpolate</strong></li>
                <li class="list-group-item"><strong>renderArea</strong></li>
                <li class="list-group-item"><strong>renderDataPoints</strong></li>
                <li class="list-group-item"><strong>tension</strong></li>
                <li class="list-group-item"><strong>xyTipsOn</strong></li>
              </ul>
              <ul class="list-group col-1">
                <li class="list-group-item list-header">Type</li>
                <li class="list-group-item">d3.curve</li>
                <li class="list-group-item">Array.<Number></li>
                <li class="list-group-item">function</li>
                <li class="list-group-item">Number</li>
                <li class="list-group-item">d3.curve</li>
                <li class="list-group-item">Boolean</li>
                <li class="list-group-item">Object</li>
                <li class="list-group-item">Number</li>
                <li class="list-group-item">Boolean</li>
              </ul>
              <ul class="list-group col-3">
                <li class="list-group-item list-header">Default</li>
                <li class="list-group-item">d3.curveLinear</li>
                <li class="list-group-item">[]</li>
                <li class="list-group-item">-</li>
                <li class="list-group-item">5</li>
                <li class="list-group-item">d3.curveLinear</li>
                <li class="list-group-item">false</li>
                <li class="list-group-item">{fillOpacity: 0.8, strokeOpacity: 0.0, radius: 2}</li>
                <li class="list-group-item">0</li>
                <li class="list-group-item">false</li>
              </ul>
              <ul class="list-group col-6">
                <li class="list-group-item list-header">Method Descriptions</li>
                <li class="list-group-item"></li>
                <li class="list-group-item"></li>
                <li class="list-group-item"></li>
                <li class="list-group-item"></li>
                <li class="list-group-item"></li>
                <li class="list-group-item">Render area under the line.</li>
                <li class="list-group-item"></li>
                <li class="list-group-item">Gets or sets the tension to use for lines drawn, in the range 0 to 1.</li>
                <li class="list-group-item">Turn on/off mouseover behavior of an individual data point which renders a circle and x/y axis dashed lines back to each respective axis(gnored if the chart brush is on)</li>
              </ul>
            </div>
      
          </div>

        <div class="col-xs-12 col-sm-2 text-center">
            <div id="bar01" class="custom-chart"></div>
            <pre><code class="language-javascript indentFix">
                barChart01
                    .dimension(genderDimension)
                    .group(genderGroup)
                    .width($(barChart01.anchor()).parent().width())
                    .height(300)
                    .x(d3.scaleBand())
                    .xUnits(dc.units.ordinal);
            </code></pre>
        </div>
        <div class="col-xs-12 col-sm-5 text-center">
            <div id="line01" class="custom-chart"></div>
            <pre><code class="language-javascript indentFix">
                lineChart01
                    .dimension(ageDimension)
                    .group(ageGroup)
                    .width($(lineChart01.anchor()).parent().width())
                    .height(300)
                    .x(d3.scaleLinear().domain([15, 70]))
                    .brushOn(true)
                    .yAxisLabel("Count")
                    .xAxisLabel("Age");
            </code></pre>
        </div>
        <div class="col-xs-12 col-sm-5 text-center">
            <div id="line02" class="custom-chart"></div>
            <pre data-line="2,3,10,14,15,16,17"><code class="language-javascript indentFix" >
                var min = ageDimension.bottom(1)[0].age;
                var max = ageDimension.top(1)[0].age;

                lineChart02
                    .dimension(ageDimension)
                    .group(ageGroup)
                    .width($(lineChart02.anchor()).parent().width())
                    .height(300)
                    .x(d3.scaleLinear().domain([min, max]))
                    .brushOn(false)
                    .yAxisLabel("Count")
                    .xAxisLabel("Age")
                    .dashStyle([12, 4, 4, 4])
                    .renderHorizontalGridLines(true)
                    .renderVerticalGridLines(true)
                    .elasticY(true);
            </code></pre>
        </div>
    </div>

    <div class="row mt-5">
        <div class="col-xs-12 col-sm-2 text-center">
            <div id="bar02" class="custom-chart"></div>
            <pre><code class="language-javascript indentFix">
                barChart02
                    .dimension(genderDimension)
                    .group(genderGroup)
                    .width($(barChart01.anchor()).parent().width())
                    .height(300)
                    .x(d3.scaleBand())
                    .xUnits(dc.units.ordinal);
            </code></pre>
        </div>
        <div class="col-xs-12 col-sm-5 text-center">
            <div id="line03" class="custom-chart"></div>
            <pre data-line="4,11,12,13"><code class="language-javascript indentFix">
                lineChart03
                    .dimension(ageDimension)
                    .group(remove_empty_bins(ageGroup))
                    .width($(lineChart03.anchor()).parent().width())
                    .height(300)
                    .x(d3.scaleLinear().domain([15, 70]))
                    .brushOn(false)
                    .yAxisLabel("Count")
                    .xAxisLabel("Age")
                    .dotRadius(20)
                    .renderArea(true)
                    .elasticX(true);
            </code></pre>
        </div>
        <div class="col-xs-12 col-sm-5 text-center">
            <div id="line04" class="custom-chart"></div>
            <pre data-line="11,12"><code class="language-javascript indentFix" >
                lineChart04
                    .dimension(ageDimension)
                    .group(ageGroup)
                    .width($(lineChart04.anchor()).parent().width())
                    .height(300)
                    .x(d3.scaleLinear().domain([15, 70]))
                    .brushOn(false)
                    .yAxisLabel("Count")
                    .xAxisLabel("Age")
                    .renderArea(true)
                    .renderDataPoints({ radius: 3, fillOpacity: 0.8, strokeOpacity: 0.0 });
            </code></pre>
        </div>
    </div>

    <div class="row mt-5">

        <div class="col-xs-12 col-sm-5 text-center">
            <div id="line05" class="custom-chart"></div>
            <pre data-line="4,11,12,13"><code class="language-javascript indentFix">
                lineChart03
                    .dimension(ageDimension)
                    .group(remove_empty_bins(ageGroup))
                    .width($(lineChart03.anchor()).parent().width())
                    .height(300)
                    .x(d3.scaleLinear().domain([15, 70]))
                    .brushOn(false)
                    .yAxisLabel("Count")
                    .xAxisLabel("Age")
                    .dotRadius(20)
                    .renderArea(true)
                    .elasticX(true);
            </code></pre>
        </div>

    </div>

</section>
---
scripts:
<script>
    var toFix = document.getElementsByClassName("indentFix");
    for (var elem = 0, elems = toFix.length; elem < elems; elem++) {
        var lines = toFix[elem].innerHTML.split("\n");
        var line = lines[1];
        var leadingSpaces = 1;
        while (line.charAt(leadingSpaces) == " ") { leadingSpaces++; }
        for (var i = 1, len = lines.length; i < len; i++) {
            lines[i] = lines[i].slice(leadingSpaces);
        }
        toFix[elem].innerHTML = lines.join("\n");
    }
</script>
<script language="javascript">
    /* global dc, crossfilter, d3 */
    d3.csv('../data/people.csv')
        .then(function (data) {
            makeGraphs(data);
            // draw chart in here!
        })
        .catch(function (error) {
            console.log(error);
        });

    function makeGraphs(peopleData) {
        var parseTime = d3.timeParse("%Y-%m-%d");
        var simpleDateFormat = d3.timeParse("%m/%Y");
        // Establish the desired formatting options using locale.format():
        // https://github.com/d3/d3-time-format/blob/master/README.md#locale_format
        var formatDay = d3.timeFormat("%a"),
            formatWeek = d3.timeFormat("%b %d"),
            formatMonth = d3.timeFormat("%B"),
            formatYear = d3.timeFormat("%Y");

        peopleData.forEach(function (d) {
            if (d.CreditCardType == "") {
                d.CreditCardType = "no data"
            }

            d.age = ~~((Date.now() - new Date(d.DOB)) / (31557600000));
            d.DOB2 = parseTime(d.DOB);
            d.DOB3 = formatDay(d.DOB2);
            d.DOB4 = formatWeek(d.DOB2);
            d.DOB5 = formatMonth(d.DOB2);
            d.DOB6 = formatYear(d.DOB2);

            d.ageCat = setAgeGroup(d.age);
        });

        var ndx = crossfilter(peopleData);

        var ageDimension = ndx.dimension(function (d) { return d.age })
        var genderDimension = ndx.dimension(function (d) { return d.gender; });
        var DOBdim = ndx.dimension(function (d) { return d.DOB2 })

        var ageGroup = ageDimension.group().reduceCount();
        var genderGroup = genderDimension.group().reduceCount();
        var DOBGroup = DOBdim.group().reduceCount();



        var pieDim = ndx.dimension(function (data) {
            let age = ~~((Date.now() - new Date(data.DOB)) / (31557600000));
            if (age >= 50) {
                return "Old";
            }
            else if (age > 30) {
                return "Middle";
            }
            else {
                return "Young";
            }
        });
        var pieGroup = pieDim.group();

        function remove_empty_bins(source_group) {
            return {
                all: function () {
                    return source_group.all().filter(function (d) {
                        //return Math.abs(d.value) > 0.00001; // if using floating-point numbers
                        return d.value !== 0; // if integers only
                    });
                }
            };
        }

        // instanciate the charts
        var barChart01 = dc.barChart('#bar01'),
            barChart02 = dc.barChart('#bar02'),
            lineChart01 = dc.lineChart('#line01'),
            lineChart02 = dc.lineChart('#line02'),
            lineChart03 = dc.lineChart('#line03'),
            lineChart04 = dc.lineChart('#line04');
        lineChart05 = dc.lineChart('#line05');

        // design the chart
        barChart01
            .dimension(pieDim)
            .group(pieGroup)
            .width($(barChart01.anchor()).parent().width())
            .height(300)
            .x(d3.scaleBand())
            .xUnits(dc.units.ordinal);

        barChart02
            .dimension(genderDimension)
            .group(genderGroup)
            .width($(barChart01.anchor()).parent().width())
            .height(300)
            .x(d3.scaleBand())
            .xUnits(dc.units.ordinal);

        lineChart01
            .dimension(ageDimension)
            .group(ageGroup)
            .width($(lineChart01.anchor()).parent().width())
            .height(300)
            .x(d3.scaleLinear().domain([15, 70]))
            .brushOn(true)
            .yAxisLabel("Count")
            .xAxisLabel("Age");

        var min = ageDimension.bottom(1)[0].age;
        var max = ageDimension.top(1)[0].age;
        lineChart02
            .dimension(ageDimension)
            .group(ageGroup)
            .width($(lineChart02.anchor()).parent().width())
            .height(300)
            .x(d3.scaleLinear().domain([min, max]))
            .brushOn(false)
            .yAxisLabel("Count")
            .xAxisLabel("Age")
            .dashStyle([12, 4, 4, 4])
            .renderHorizontalGridLines(true)
            .renderVerticalGridLines(true)
            .elasticY(true);


        lineChart03
            .dimension(ageDimension)
            .group(remove_empty_bins(ageGroup))
            .width($(lineChart03.anchor()).parent().width())
            .height(300)
            .x(d3.scaleLinear().domain([15, 75]))
            .brushOn(false)
            .yAxisLabel("Count")
            .xAxisLabel("Age")
            .dotRadius(20)
            .renderArea(true)
            .elasticX(true);

        lineChart04
            .dimension(ageDimension)
            .group(ageGroup)
            .width($(lineChart04.anchor()).parent().width())
            .height(300)
            .x(d3.scaleLinear().domain([15, 70]))
            .brushOn(false)
            .yAxisLabel("Count")
            .xAxisLabel("Age")
            .renderArea(true)
            .renderDataPoints({ radius: 3, fillOpacity: 0.8, strokeOpacity: 0.0 });

        lineChart05
            .dimension(DOBdim)
            .group(DOBGroup)
            .width($(lineChart04.anchor()).parent().width())
            .height(300)
            .brushOn(false)
            .yAxisLabel("Count")
            .xAxisLabel("Age")
            .renderArea(true)
            .renderDataPoints({ radius: 3, fillOpacity: 0.8, strokeOpacity: 0.0 })
            .x(d3.scaleTime()
                .domain([new Date(1970, 0, 1), new Date()])
                .range(["red", "green"])
            );


        dc.renderAll();
    };

    function setAgeGroup(age) {
        if (age >= 50) {
            return "Old";
        }
        else if (age > 30) {
            return "Middle";
        }
        else {
            return "Young";
        }
    }
</script>